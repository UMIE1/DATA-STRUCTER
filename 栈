//元素逆置
#include<stdio.h>
#define Maxsize 100
typedef int ElemType;
typedef struct
{
	ElemType data[Maxsize];
	int top;
}SqStack;
//栈的初始化
void InitStack(SqStack &st)
{
	st.top = -1;
}
//进栈push
int push(SqStack &st,ElemType x)
{
	//栈满  返回0
	if (st.top == Maxsize - 1)
		return 0;
	else
	{
		//进栈 进栈成功返回1
		st.top++;
		st.data[st.top] = x;
		return 1;
	}
}
//出栈
int pop(SqStack &st,ElemType &x)
{
	//栈空
	if (st.top == -1)
		return 0;
	else
	{
		//出栈
		x = st.data[st.top];
		st.top--;
		return 1;
	}
}
int ElemRever(SqStack &st,ElemType &x)
{
	if (st.top == -1)
		return 0;
	else
	{
		pop(st, x);
		return x;
	}
}
int main()
{
	SqStack st;
	InitStack(st);
	//元素逆置
	int arr[] = { 0,1,2,3,4,5,6,7,8,9 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int x = 0;
	for (int i = 0; i < sz; i++)
	{
		push(st, arr[i]);
	}
	printf("逆置前\n");
	for (int i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	printf("逆置后\n");
	for (int i = 0; i < sz; i++)
	{
		printf("%d ", ElemRever(st, x));
	}
}
